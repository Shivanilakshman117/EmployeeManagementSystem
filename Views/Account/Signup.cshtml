@model EmployeeManagementSystem.Models.Employee
@{
    ViewBag.Title = "Sign up";
}
@{
    List<SelectListItem> GenderList = new List<SelectListItem>();
    GenderList.Add(new SelectListItem
    {
        Text = "Male",
        Value = "Male"
    });
    GenderList.Add(new SelectListItem
    {
        Text = "Female",
        Value = "Female",
        Selected = true
    });
    GenderList.Add(new SelectListItem
    {
        Text = "Other",
        Value = "Other"
    });

    List<SelectListItem> DepartmentList = new List<SelectListItem>();
    DepartmentList.Add(new SelectListItem
    {
        Text = "HR",
        Value = "HR"
    });
    DepartmentList.Add(new SelectListItem
    {
        Text = "BD",
        Value = "BD",
        Selected = true
    });
    DepartmentList.Add(new SelectListItem
    {
        Text = "BT",
        Value = "BT"
    });

    DepartmentList.Add(new SelectListItem
    {
        Text = "IT",
        Value = "IT"
    });

    DepartmentList.Add(new SelectListItem
    {
        Text = "Finance",
        Value = "Finance"
    });

    List<SelectListItem> DesignationList = new List<SelectListItem>();
    DesignationList.Add(new SelectListItem
    {
        Text = "Trainee",
        Value = "Trainee"
    });
    DesignationList.Add(new SelectListItem
    {
        Text = "Associate Manager",
        Value = "Associate Manager",
        Selected = true
    });
    DesignationList.Add(new SelectListItem
    {
        Text = "Manager",
        Value = "Manager",
        Selected = true
    });
    DesignationList.Add(new SelectListItem
    {
        Text = "Head",
        Value = "Head"
    });

}

<h2>Sign up</h2>



@if (ViewBag.status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Account Created Successfully!</strong>@ViewBag.Message
        </div>

    }

}

else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Welcome to Techx Solutions</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Employee_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employee_ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee_ID, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("Employee ID Exists", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Gender", GenderList, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Department", DepartmentList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Designation", DesignationList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Work_Email_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Work_Email_ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Work_Email_ID, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("Email Exists", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Blood_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Blood_Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Blood_Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOJ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOJ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Sign up!" class="btn btn-default" />
                </div>
            </div>
        </div>

    }

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}